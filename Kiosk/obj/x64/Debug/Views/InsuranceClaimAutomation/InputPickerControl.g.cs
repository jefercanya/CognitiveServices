#pragma checksum "E:\LSData\Net Core\Cognitive_Services\Kiosk\Kiosk\Views\InsuranceClaimAutomation\InputPickerControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "6129A0361E2F26F0DB038C6875AFA3343FEFAB76ABBE3AB245E0118FCF3E0DD9"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntelligentKioskSample.Views.InsuranceClaimAutomation
{
    partial class InputPickerControl : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Pivot_SelectedItem(global::Windows.UI.Xaml.Controls.Pivot obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_PivotItem_Header(global::Windows.UI.Xaml.Controls.PivotItem obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Header = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class InputPickerControl_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IInputPickerControl_Bindings
        {
            private global::IntelligentKioskSample.Views.InsuranceClaimAutomation.InputPickerControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Pivot obj3;
            private global::Windows.UI.Xaml.Controls.PivotItem obj4;
            private global::Windows.UI.Xaml.Controls.PivotItem obj5;
            private global::Windows.UI.Xaml.Controls.PivotItem obj6;
            private global::Windows.UI.Xaml.Controls.PivotItem obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3SelectedItemDisabled = false;
            private static bool isobj4HeaderDisabled = false;
            private static bool isobj4VisibilityDisabled = false;
            private static bool isobj5HeaderDisabled = false;
            private static bool isobj5VisibilityDisabled = false;
            private static bool isobj6HeaderDisabled = false;
            private static bool isobj6VisibilityDisabled = false;
            private static bool isobj7HeaderDisabled = false;
            private static bool isobj7VisibilityDisabled = false;

            private InputPickerControl_obj1_BindingsTracking bindingsTracking;

            public InputPickerControl_obj1_Bindings()
            {
                this.bindingsTracking = new InputPickerControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 47 && columnNumber == 31)
                {
                    isobj3SelectedItemDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 24)
                {
                    isobj4HeaderDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 54)
                {
                    isobj4VisibilityDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 24)
                {
                    isobj5HeaderDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 52)
                {
                    isobj5VisibilityDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 24)
                {
                    isobj6HeaderDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 50)
                {
                    isobj6VisibilityDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 24)
                {
                    isobj7HeaderDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 52)
                {
                    isobj7VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 47
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Pivot)target;
                        this.bindingsTracking.RegisterTwoWayListener_3(this.obj3);
                        break;
                    case 4: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 48
                        this.obj4 = (global::Windows.UI.Xaml.Controls.PivotItem)target;
                        break;
                    case 5: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 84
                        this.obj5 = (global::Windows.UI.Xaml.Controls.PivotItem)target;
                        break;
                    case 6: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 94
                        this.obj6 = (global::Windows.UI.Xaml.Controls.PivotItem)target;
                        break;
                    case 7: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 105
                        this.obj7 = (global::Windows.UI.Xaml.Controls.PivotItem)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IInputPickerControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::IntelligentKioskSample.Views.InsuranceClaimAutomation.InputPickerControl)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::IntelligentKioskSample.Views.InsuranceClaimAutomation.InputPickerControl obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedTab(obj.SelectedTab, phase);
                        this.Update_ExamplesTab(obj.ExamplesTab, phase);
                        this.Update_CameraTab(obj.CameraTab, phase);
                        this.Update_FileTab(obj.FileTab, phase);
                        this.Update_SearchTab(obj.SearchTab, phase);
                    }
                }
            }
            private void Update_SelectedTab(global::Windows.UI.Xaml.Controls.PivotItem obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 47
                    if (!isobj3SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Pivot_SelectedItem(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ExamplesTab(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ExamplesTab(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ExamplesTab_IsVisible(obj.IsVisible, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 48
                    if (!isobj4HeaderDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PivotItem_Header(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ExamplesTab_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 48
                    if (!isobj4VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("booleanToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_CameraTab(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_CameraTab(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_CameraTab_IsVisible(obj.IsVisible, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 84
                    if (!isobj5HeaderDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PivotItem_Header(this.obj5, obj, null);
                    }
                }
            }
            private void Update_CameraTab_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 84
                    if (!isobj5VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj5, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("booleanToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_FileTab(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_FileTab(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FileTab_IsVisible(obj.IsVisible, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 94
                    if (!isobj6HeaderDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PivotItem_Header(this.obj6, obj, null);
                    }
                }
            }
            private void Update_FileTab_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 94
                    if (!isobj6VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj6, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("booleanToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_SearchTab(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SearchTab(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SearchTab_IsVisible(obj.IsVisible, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 105
                    if (!isobj7HeaderDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PivotItem_Header(this.obj7, obj, null);
                    }
                }
            }
            private void Update_SearchTab_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 105
                    if (!isobj7VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj7, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("booleanToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void UpdateTwoWay_3_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SelectedTab = (global::Windows.UI.Xaml.Controls.PivotItem)this.obj3.SelectedItem;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class InputPickerControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<InputPickerControl_obj1_Bindings> weakRefToBindingObj; 

                public InputPickerControl_obj1_BindingsTracking(InputPickerControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<InputPickerControl_obj1_Bindings>(obj);
                }

                public InputPickerControl_obj1_Bindings TryGetBindingObject()
                {
                    InputPickerControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ExamplesTab(null);
                    UpdateChildListeners_CameraTab(null);
                    UpdateChildListeners_FileTab(null);
                    UpdateChildListeners_SearchTab(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InputPickerControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Views.InsuranceClaimAutomation.InputPickerControl obj = sender as global::IntelligentKioskSample.Views.InsuranceClaimAutomation.InputPickerControl;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SelectedTab(obj.SelectedTab, DATA_CHANGED);
                                bindings.Update_ExamplesTab(obj.ExamplesTab, DATA_CHANGED);
                                bindings.Update_CameraTab(obj.CameraTab, DATA_CHANGED);
                                bindings.Update_FileTab(obj.FileTab, DATA_CHANGED);
                                bindings.Update_SearchTab(obj.SearchTab, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SelectedTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedTab(obj.SelectedTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ExamplesTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ExamplesTab(obj.ExamplesTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CameraTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CameraTab(obj.CameraTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FileTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FileTab(obj.FileTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SearchTab(obj.SearchTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::IntelligentKioskSample.Views.InsuranceClaimAutomation.InputPickerControl obj)
                {
                    InputPickerControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_ExamplesTab(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InputPickerControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ExamplesTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ExamplesTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::IntelligentKioskSample.Models.TabHeader cache_ExamplesTab = null;
                public void UpdateChildListeners_ExamplesTab(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    if (obj != cache_ExamplesTab)
                    {
                        if (cache_ExamplesTab != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ExamplesTab).PropertyChanged -= PropertyChanged_ExamplesTab;
                            cache_ExamplesTab = null;
                        }
                        if (obj != null)
                        {
                            cache_ExamplesTab = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ExamplesTab;
                        }
                    }
                }
                public void PropertyChanged_CameraTab(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InputPickerControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_CameraTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CameraTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::IntelligentKioskSample.Models.TabHeader cache_CameraTab = null;
                public void UpdateChildListeners_CameraTab(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    if (obj != cache_CameraTab)
                    {
                        if (cache_CameraTab != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_CameraTab).PropertyChanged -= PropertyChanged_CameraTab;
                            cache_CameraTab = null;
                        }
                        if (obj != null)
                        {
                            cache_CameraTab = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_CameraTab;
                        }
                    }
                }
                public void PropertyChanged_FileTab(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InputPickerControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_FileTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FileTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::IntelligentKioskSample.Models.TabHeader cache_FileTab = null;
                public void UpdateChildListeners_FileTab(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    if (obj != cache_FileTab)
                    {
                        if (cache_FileTab != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_FileTab).PropertyChanged -= PropertyChanged_FileTab;
                            cache_FileTab = null;
                        }
                        if (obj != null)
                        {
                            cache_FileTab = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_FileTab;
                        }
                    }
                }
                public void PropertyChanged_SearchTab(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InputPickerControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SearchTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SearchTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::IntelligentKioskSample.Models.TabHeader cache_SearchTab = null;
                public void UpdateChildListeners_SearchTab(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    if (obj != cache_SearchTab)
                    {
                        if (cache_SearchTab != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SearchTab).PropertyChanged -= PropertyChanged_SearchTab;
                            cache_SearchTab = null;
                        }
                        if (obj != null)
                        {
                            cache_SearchTab = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SearchTab;
                        }
                    }
                }
                public void RegisterTwoWayListener_3(global::Windows.UI.Xaml.Controls.Pivot sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Pivot.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_3_SelectedItem();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 1
                {
                    this.userControl = (global::Windows.UI.Xaml.Controls.UserControl)(target);
                }
                break;
            case 3: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 47
                {
                    this.pivot = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                }
                break;
            case 8: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 111
                {
                    this.autoSuggestBox = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.autoSuggestBox).QuerySubmitted += this.onQuerySubmitted;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.autoSuggestBox).TextChanged += this.onTextChanged;
                }
                break;
            case 9: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 114
                {
                    this.imageResultsGrid = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    ((global::Windows.UI.Xaml.Controls.GridView)this.imageResultsGrid).ItemClick += this.OnImageItemClicked;
                }
                break;
            case 10: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 126
                {
                    this.progressRing = (global::Windows.UI.Xaml.Controls.ProgressRing)(target);
                }
                break;
            case 12: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 96
                {
                    global::Windows.UI.Xaml.Controls.Button element12 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element12).Click += this.OnBrowseFileButtonClicked;
                }
                break;
            case 13: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 85
                {
                    global::Windows.UI.Xaml.Controls.Grid element13 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element13).SizeChanged += this.OnCameraAvailableSpaceChanged;
                }
                break;
            case 14: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 86
                {
                    this.webCamHostGridParent = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 15: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 87
                {
                    this.webCamHostGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 16: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 88
                {
                    this.cameraControl = (global::IntelligentKioskSample.Controls.CameraControl)(target);
                    ((global::IntelligentKioskSample.Controls.CameraControl)this.cameraControl).ImageCaptured += this.OnCameraPhotoCaptured;
                }
                break;
            case 17: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 50
                {
                    this.samplesGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    ((global::Windows.UI.Xaml.Controls.GridView)this.samplesGridView).ItemClick += this.OnSampleItemClicked;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\InsuranceClaimAutomation\InputPickerControl.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    InputPickerControl_obj1_Bindings bindings = new InputPickerControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

