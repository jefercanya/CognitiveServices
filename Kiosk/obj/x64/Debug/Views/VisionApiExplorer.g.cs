#pragma checksum "E:\LSData\Net Core\Cognitive_Services\Kiosk\Kiosk\Views\VisionApiExplorer.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "F263972CA0B68FA9E068096F3D0495397541AAC2DDF0C86D87C6A6EA098BA092"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntelligentKioskSample.Views
{
    partial class VisionApiExplorer : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Pivot_SelectedItem(global::Windows.UI.Xaml.Controls.Pivot obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_PivotItem_Header(global::Windows.UI.Xaml.Controls.PivotItem obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Header = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Tag(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class VisionApiExplorer_obj7_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IVisionApiExplorer_Bindings
        {
            private global::IntelligentKioskSample.Models.TabHeader dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7TextDisabled = false;
            private static bool isobj7VisibilityDisabled = false;

            private VisionApiExplorer_obj7_BindingsTracking bindingsTracking;

            public VisionApiExplorer_obj7_Bindings()
            {
                this.bindingsTracking = new VisionApiExplorer_obj7_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 79 && columnNumber == 44)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 79 && columnNumber == 79)
                {
                    isobj7VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // Views\VisionApiExplorer.xaml line 79
                        this.obj7 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.TextBlock)target);
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj7.Target as global::Windows.UI.Xaml.Controls.TextBlock).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::IntelligentKioskSample.Models.TabHeader) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IVisionApiExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::IntelligentKioskSample.Models.TabHeader)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsVisible(obj.IsVisible, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 79
                    if (!isobj7TextDisabled)
                    {
                        if ((this.obj7.Target as global::Windows.UI.Xaml.Controls.TextBlock) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text((this.obj7.Target as global::Windows.UI.Xaml.Controls.TextBlock), obj, null);
                        }
                    }
                }
            }
            private void Update_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 79
                    if (!isobj7VisibilityDisabled)
                    {
                        if ((this.obj7.Target as global::Windows.UI.Xaml.Controls.TextBlock) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility((this.obj7.Target as global::Windows.UI.Xaml.Controls.TextBlock), (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfTrue").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class VisionApiExplorer_obj7_BindingsTracking
            {
                private global::System.WeakReference<VisionApiExplorer_obj7_Bindings> weakRefToBindingObj; 

                public VisionApiExplorer_obj7_BindingsTracking(VisionApiExplorer_obj7_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<VisionApiExplorer_obj7_Bindings>(obj);
                }

                public VisionApiExplorer_obj7_Bindings TryGetBindingObject()
                {
                    VisionApiExplorer_obj7_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VisionApiExplorer_obj7_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_IsVisible(obj.IsVisible, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    VisionApiExplorer_obj7_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class VisionApiExplorer_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IVisionApiExplorer_Bindings
        {
            private global::IntelligentKioskSample.Views.VisionApiExplorer dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Pivot obj5;
            private global::Windows.UI.Xaml.Controls.PivotItem obj8;
            private global::Windows.UI.Xaml.Controls.PivotItem obj9;
            private global::Windows.UI.Xaml.Controls.PivotItem obj10;
            private global::Windows.UI.Xaml.Controls.PivotItem obj11;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;
            private global::Windows.UI.Xaml.Controls.HyperlinkButton obj14;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj19;
            private global::Windows.UI.Xaml.Controls.TextBlock obj20;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj23;
            private global::Windows.UI.Xaml.Controls.TextBlock obj24;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj25;
            private global::Windows.UI.Xaml.Controls.TextBlock obj26;
            private global::Windows.UI.Xaml.Controls.Border obj32;
            private global::Windows.UI.Xaml.Controls.Border obj33;
            private global::Windows.UI.Xaml.Controls.Border obj34;
            private global::Windows.UI.Xaml.Controls.TextBlock obj36;
            private global::Windows.UI.Xaml.Controls.TextBlock obj37;
            private global::Windows.UI.Xaml.Controls.TextBlock obj38;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5SelectedItemDisabled = false;
            private static bool isobj8HeaderDisabled = false;
            private static bool isobj8VisibilityDisabled = false;
            private static bool isobj9HeaderDisabled = false;
            private static bool isobj9VisibilityDisabled = false;
            private static bool isobj10HeaderDisabled = false;
            private static bool isobj10VisibilityDisabled = false;
            private static bool isobj11HeaderDisabled = false;
            private static bool isobj11VisibilityDisabled = false;
            private static bool isobj12ItemsSourceDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj13VisibilityDisabled = false;
            private static bool isobj14VisibilityDisabled = false;
            private static bool isobj17ItemsSourceDisabled = false;
            private static bool isobj18TextDisabled = false;
            private static bool isobj18VisibilityDisabled = false;
            private static bool isobj19ItemsSourceDisabled = false;
            private static bool isobj20TextDisabled = false;
            private static bool isobj20VisibilityDisabled = false;
            private static bool isobj23ItemsSourceDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj24VisibilityDisabled = false;
            private static bool isobj25ItemsSourceDisabled = false;
            private static bool isobj26TextDisabled = false;
            private static bool isobj26VisibilityDisabled = false;
            private static bool isobj32TagDisabled = false;
            private static bool isobj33TagDisabled = false;
            private static bool isobj34TagDisabled = false;
            private static bool isobj36TextDisabled = false;
            private static bool isobj37TextDisabled = false;
            private static bool isobj38TextDisabled = false;

            private VisionApiExplorer_obj1_BindingsTracking bindingsTracking;

            public VisionApiExplorer_obj1_Bindings()
            {
                this.bindingsTracking = new VisionApiExplorer_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 76 && columnNumber == 28)
                {
                    isobj5SelectedItemDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 36)
                {
                    isobj8HeaderDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 65)
                {
                    isobj8VisibilityDisabled = true;
                }
                else if (lineNumber == 161 && columnNumber == 36)
                {
                    isobj9HeaderDisabled = true;
                }
                else if (lineNumber == 161 && columnNumber == 63)
                {
                    isobj9VisibilityDisabled = true;
                }
                else if (lineNumber == 242 && columnNumber == 36)
                {
                    isobj10HeaderDisabled = true;
                }
                else if (lineNumber == 242 && columnNumber == 65)
                {
                    isobj10VisibilityDisabled = true;
                }
                else if (lineNumber == 317 && columnNumber == 36)
                {
                    isobj11HeaderDisabled = true;
                }
                else if (lineNumber == 317 && columnNumber == 62)
                {
                    isobj11VisibilityDisabled = true;
                }
                else if (lineNumber == 323 && columnNumber == 51)
                {
                    isobj12ItemsSourceDisabled = true;
                }
                else if (lineNumber == 343 && columnNumber == 48)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 343 && columnNumber == 96)
                {
                    isobj13VisibilityDisabled = true;
                }
                else if (lineNumber == 345 && columnNumber == 75)
                {
                    isobj14VisibilityDisabled = true;
                }
                else if (lineNumber == 248 && columnNumber == 51)
                {
                    isobj17ItemsSourceDisabled = true;
                }
                else if (lineNumber == 278 && columnNumber == 48)
                {
                    isobj18TextDisabled = true;
                }
                else if (lineNumber == 278 && columnNumber == 96)
                {
                    isobj18VisibilityDisabled = true;
                }
                else if (lineNumber == 282 && columnNumber == 51)
                {
                    isobj19ItemsSourceDisabled = true;
                }
                else if (lineNumber == 312 && columnNumber == 48)
                {
                    isobj20TextDisabled = true;
                }
                else if (lineNumber == 312 && columnNumber == 96)
                {
                    isobj20VisibilityDisabled = true;
                }
                else if (lineNumber == 167 && columnNumber == 51)
                {
                    isobj23ItemsSourceDisabled = true;
                }
                else if (lineNumber == 202 && columnNumber == 48)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 202 && columnNumber == 96)
                {
                    isobj24VisibilityDisabled = true;
                }
                else if (lineNumber == 206 && columnNumber == 51)
                {
                    isobj25ItemsSourceDisabled = true;
                }
                else if (lineNumber == 237 && columnNumber == 48)
                {
                    isobj26TextDisabled = true;
                }
                else if (lineNumber == 237 && columnNumber == 96)
                {
                    isobj26VisibilityDisabled = true;
                }
                else if (lineNumber == 138 && columnNumber == 45)
                {
                    isobj32TagDisabled = true;
                }
                else if (lineNumber == 144 && columnNumber == 45)
                {
                    isobj33TagDisabled = true;
                }
                else if (lineNumber == 150 && columnNumber == 45)
                {
                    isobj34TagDisabled = true;
                }
                else if (lineNumber == 151 && columnNumber == 52)
                {
                    isobj36TextDisabled = true;
                }
                else if (lineNumber == 145 && columnNumber == 52)
                {
                    isobj37TextDisabled = true;
                }
                else if (lineNumber == 139 && columnNumber == 52)
                {
                    isobj38TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // Views\VisionApiExplorer.xaml line 76
                        this.obj5 = (global::Windows.UI.Xaml.Controls.Pivot)target;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 8: // Views\VisionApiExplorer.xaml line 82
                        this.obj8 = (global::Windows.UI.Xaml.Controls.PivotItem)target;
                        break;
                    case 9: // Views\VisionApiExplorer.xaml line 161
                        this.obj9 = (global::Windows.UI.Xaml.Controls.PivotItem)target;
                        break;
                    case 10: // Views\VisionApiExplorer.xaml line 242
                        this.obj10 = (global::Windows.UI.Xaml.Controls.PivotItem)target;
                        break;
                    case 11: // Views\VisionApiExplorer.xaml line 317
                        this.obj11 = (global::Windows.UI.Xaml.Controls.PivotItem)target;
                        break;
                    case 12: // Views\VisionApiExplorer.xaml line 323
                        this.obj12 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    case 13: // Views\VisionApiExplorer.xaml line 343
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14: // Views\VisionApiExplorer.xaml line 345
                        this.obj14 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)target;
                        break;
                    case 17: // Views\VisionApiExplorer.xaml line 248
                        this.obj17 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    case 18: // Views\VisionApiExplorer.xaml line 278
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 19: // Views\VisionApiExplorer.xaml line 282
                        this.obj19 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    case 20: // Views\VisionApiExplorer.xaml line 312
                        this.obj20 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 23: // Views\VisionApiExplorer.xaml line 167
                        this.obj23 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    case 24: // Views\VisionApiExplorer.xaml line 202
                        this.obj24 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 25: // Views\VisionApiExplorer.xaml line 206
                        this.obj25 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    case 26: // Views\VisionApiExplorer.xaml line 237
                        this.obj26 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 32: // Views\VisionApiExplorer.xaml line 138
                        this.obj32 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 33: // Views\VisionApiExplorer.xaml line 144
                        this.obj33 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 34: // Views\VisionApiExplorer.xaml line 150
                        this.obj34 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 36: // Views\VisionApiExplorer.xaml line 151
                        this.obj36 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 37: // Views\VisionApiExplorer.xaml line 145
                        this.obj37 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 38: // Views\VisionApiExplorer.xaml line 139
                        this.obj38 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IVisionApiExplorer_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::IntelligentKioskSample.Views.VisionApiExplorer)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::IntelligentKioskSample.Views.VisionApiExplorer obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectedTab(obj.SelectedTab, phase);
                        this.Update_SummaryTab(obj.SummaryTab, phase);
                        this.Update_FacesTab(obj.FacesTab, phase);
                        this.Update_ObjectsTab(obj.ObjectsTab, phase);
                        this.Update_TextTab(obj.TextTab, phase);
                        this.Update_OcrLines(obj.OcrLines, phase);
                        this.Update_NoItemsDescription(obj.NoItemsDescription, phase);
                        this.Update_Objects(obj.Objects, phase);
                        this.Update_Brands(obj.Brands, phase);
                        this.Update_Celebrities(obj.Celebrities, phase);
                        this.Update_Faces(obj.Faces, phase);
                    }
                }
            }
            private void Update_SelectedTab(global::Windows.UI.Xaml.Controls.PivotItem obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 76
                    if (!isobj5SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Pivot_SelectedItem(this.obj5, obj, null);
                    }
                }
            }
            private void Update_SummaryTab(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SummaryTab(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SummaryTab_IsVisible(obj.IsVisible, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 82
                    if (!isobj8HeaderDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PivotItem_Header(this.obj8, obj, null);
                    }
                }
            }
            private void Update_SummaryTab_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 82
                    if (!isobj8VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfTrue").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_FacesTab(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_FacesTab(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FacesTab_IsVisible(obj.IsVisible, phase);
                        this.Update_FacesTab_Summary(obj.Summary, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 161
                    if (!isobj9HeaderDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PivotItem_Header(this.obj9, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 138
                    if (!isobj32TagDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj32, obj, null);
                    }
                }
            }
            private void Update_FacesTab_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 161
                    if (!isobj9VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfTrue").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ObjectsTab(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ObjectsTab(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ObjectsTab_IsVisible(obj.IsVisible, phase);
                        this.Update_ObjectsTab_Summary(obj.Summary, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 242
                    if (!isobj10HeaderDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PivotItem_Header(this.obj10, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 144
                    if (!isobj33TagDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj33, obj, null);
                    }
                }
            }
            private void Update_ObjectsTab_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 242
                    if (!isobj10VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj10, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfTrue").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_TextTab(global::IntelligentKioskSample.Models.TabHeader obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_TextTab(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TextTab_IsVisible(obj.IsVisible, phase);
                        this.Update_TextTab_Summary(obj.Summary, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 317
                    if (!isobj11HeaderDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PivotItem_Header(this.obj11, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 150
                    if (!isobj34TagDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj34, obj, null);
                    }
                }
            }
            private void Update_TextTab_IsVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 317
                    if (!isobj11VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj11, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfTrue").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_OcrLines(global::System.Collections.Generic.IList<global::System.Collections.Generic.IList<global::IntelligentKioskSample.Controls.Overlays.TextOverlayInfo>> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 323
                    if (!isobj12ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj12, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 343
                    if (!isobj13VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj13, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfNull").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                    // Views\VisionApiExplorer.xaml line 345
                    if (!isobj14VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj14, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfNotNull").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_NoItemsDescription(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 343
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 278
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 312
                    if (!isobj20TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj20, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 202
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj24, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 237
                    if (!isobj26TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj26, obj, null);
                    }
                }
            }
            private void Update_Objects(global::System.Collections.Generic.IList<global::IntelligentKioskSample.Controls.Overlays.ObjectOverlayInfo> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 248
                    if (!isobj17ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj17, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 278
                    if (!isobj18VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj18, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfNull").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_Brands(global::System.Collections.Generic.IList<global::IntelligentKioskSample.Controls.Overlays.ObjectOverlayInfo> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 282
                    if (!isobj19ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj19, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 312
                    if (!isobj20VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj20, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfNull").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_Celebrities(global::System.Collections.Generic.IList<global::IntelligentKioskSample.Controls.Overlays.FaceOverlayInfo> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 167
                    if (!isobj23ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj23, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 202
                    if (!isobj24VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj24, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfNull").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_Faces(global::System.Collections.Generic.IList<global::IntelligentKioskSample.Controls.Overlays.FaceOverlayInfo> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 206
                    if (!isobj25ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj25, obj, null);
                    }
                    // Views\VisionApiExplorer.xaml line 237
                    if (!isobj26VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj26, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("visibleIfNull").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_TextTab_Summary(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 151
                    if (!isobj36TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj36, obj, null);
                    }
                }
            }
            private void Update_ObjectsTab_Summary(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 145
                    if (!isobj37TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj37, obj, null);
                    }
                }
            }
            private void Update_FacesTab_Summary(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\VisionApiExplorer.xaml line 139
                    if (!isobj38TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj38, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_5_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SelectedTab = (global::Windows.UI.Xaml.Controls.PivotItem)this.obj5.SelectedItem;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class VisionApiExplorer_obj1_BindingsTracking
            {
                private global::System.WeakReference<VisionApiExplorer_obj1_Bindings> weakRefToBindingObj; 

                public VisionApiExplorer_obj1_BindingsTracking(VisionApiExplorer_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<VisionApiExplorer_obj1_Bindings>(obj);
                }

                public VisionApiExplorer_obj1_Bindings TryGetBindingObject()
                {
                    VisionApiExplorer_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_SummaryTab(null);
                    UpdateChildListeners_FacesTab(null);
                    UpdateChildListeners_ObjectsTab(null);
                    UpdateChildListeners_TextTab(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VisionApiExplorer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Views.VisionApiExplorer obj = sender as global::IntelligentKioskSample.Views.VisionApiExplorer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SelectedTab(obj.SelectedTab, DATA_CHANGED);
                                bindings.Update_SummaryTab(obj.SummaryTab, DATA_CHANGED);
                                bindings.Update_FacesTab(obj.FacesTab, DATA_CHANGED);
                                bindings.Update_ObjectsTab(obj.ObjectsTab, DATA_CHANGED);
                                bindings.Update_TextTab(obj.TextTab, DATA_CHANGED);
                                bindings.Update_OcrLines(obj.OcrLines, DATA_CHANGED);
                                bindings.Update_NoItemsDescription(obj.NoItemsDescription, DATA_CHANGED);
                                bindings.Update_Objects(obj.Objects, DATA_CHANGED);
                                bindings.Update_Brands(obj.Brands, DATA_CHANGED);
                                bindings.Update_Celebrities(obj.Celebrities, DATA_CHANGED);
                                bindings.Update_Faces(obj.Faces, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SelectedTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SelectedTab(obj.SelectedTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SummaryTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SummaryTab(obj.SummaryTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FacesTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FacesTab(obj.FacesTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ObjectsTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ObjectsTab(obj.ObjectsTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TextTab":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TextTab(obj.TextTab, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "OcrLines":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_OcrLines(obj.OcrLines, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoItemsDescription":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoItemsDescription(obj.NoItemsDescription, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Objects":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Objects(obj.Objects, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Brands":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Brands(obj.Brands, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Celebrities":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Celebrities(obj.Celebrities, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Faces":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Faces(obj.Faces, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::IntelligentKioskSample.Views.VisionApiExplorer obj)
                {
                    VisionApiExplorer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_SummaryTab(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VisionApiExplorer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SummaryTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SummaryTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::IntelligentKioskSample.Models.TabHeader cache_SummaryTab = null;
                public void UpdateChildListeners_SummaryTab(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    if (obj != cache_SummaryTab)
                    {
                        if (cache_SummaryTab != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SummaryTab).PropertyChanged -= PropertyChanged_SummaryTab;
                            cache_SummaryTab = null;
                        }
                        if (obj != null)
                        {
                            cache_SummaryTab = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SummaryTab;
                        }
                    }
                }
                public void PropertyChanged_FacesTab(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VisionApiExplorer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_FacesTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                bindings.Update_FacesTab_Summary(obj.Summary, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FacesTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Summary":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_FacesTab_Summary(obj.Summary, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::IntelligentKioskSample.Models.TabHeader cache_FacesTab = null;
                public void UpdateChildListeners_FacesTab(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    if (obj != cache_FacesTab)
                    {
                        if (cache_FacesTab != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_FacesTab).PropertyChanged -= PropertyChanged_FacesTab;
                            cache_FacesTab = null;
                        }
                        if (obj != null)
                        {
                            cache_FacesTab = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_FacesTab;
                        }
                    }
                }
                public void PropertyChanged_ObjectsTab(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VisionApiExplorer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ObjectsTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                bindings.Update_ObjectsTab_Summary(obj.Summary, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ObjectsTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Summary":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ObjectsTab_Summary(obj.Summary, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::IntelligentKioskSample.Models.TabHeader cache_ObjectsTab = null;
                public void UpdateChildListeners_ObjectsTab(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    if (obj != cache_ObjectsTab)
                    {
                        if (cache_ObjectsTab != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ObjectsTab).PropertyChanged -= PropertyChanged_ObjectsTab;
                            cache_ObjectsTab = null;
                        }
                        if (obj != null)
                        {
                            cache_ObjectsTab = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ObjectsTab;
                        }
                    }
                }
                public void PropertyChanged_TextTab(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VisionApiExplorer_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::IntelligentKioskSample.Models.TabHeader obj = sender as global::IntelligentKioskSample.Models.TabHeader;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_TextTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                bindings.Update_TextTab_Summary(obj.Summary, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsVisible":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TextTab_IsVisible(obj.IsVisible, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Summary":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TextTab_Summary(obj.Summary, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::IntelligentKioskSample.Models.TabHeader cache_TextTab = null;
                public void UpdateChildListeners_TextTab(global::IntelligentKioskSample.Models.TabHeader obj)
                {
                    if (obj != cache_TextTab)
                    {
                        if (cache_TextTab != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_TextTab).PropertyChanged -= PropertyChanged_TextTab;
                            cache_TextTab = null;
                        }
                        if (obj != null)
                        {
                            cache_TextTab = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_TextTab;
                        }
                    }
                }
                public void RegisterTwoWayListener_5(global::Windows.UI.Xaml.Controls.Pivot sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Pivot.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_SelectedItem();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\VisionApiExplorer.xaml line 1
                {
                    this.mainPage = (global::Windows.UI.Xaml.Controls.Page)(target);
                }
                break;
            case 2: // Views\VisionApiExplorer.xaml line 30
                {
                    this.commandBar = (global::Windows.UI.Xaml.Controls.CommandBar)(target);
                }
                break;
            case 3: // Views\VisionApiExplorer.xaml line 361
                {
                    this.imagePicker = (global::IntelligentKioskSample.Controls.ImagePickerControl)(target);
                    ((global::IntelligentKioskSample.Controls.ImagePickerControl)this.imagePicker).OnImageSearchCompleted += this.OnImageSearchCompleted;
                }
                break;
            case 4: // Views\VisionApiExplorer.xaml line 54
                {
                    this.resultsDetails = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 14: // Views\VisionApiExplorer.xaml line 345
                {
                    global::Windows.UI.Xaml.Controls.HyperlinkButton element14 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)(target);
                    ((global::Windows.UI.Xaml.Controls.HyperlinkButton)element14).Click += this.CopyOcrLines;
                }
                break;
            case 29: // Views\VisionApiExplorer.xaml line 88
                {
                    this.descriptionGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 30: // Views\VisionApiExplorer.xaml line 101
                {
                    this.colorInfoListView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 31: // Views\VisionApiExplorer.xaml line 125
                {
                    this.tagsGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 32: // Views\VisionApiExplorer.xaml line 138
                {
                    global::Windows.UI.Xaml.Controls.Border element32 = (global::Windows.UI.Xaml.Controls.Border)(target);
                    ((global::Windows.UI.Xaml.Controls.Border)element32).PointerEntered += this.Summary_PointerEntered;
                    ((global::Windows.UI.Xaml.Controls.Border)element32).PointerExited += this.Summary_PointerExited;
                }
                break;
            case 33: // Views\VisionApiExplorer.xaml line 144
                {
                    global::Windows.UI.Xaml.Controls.Border element33 = (global::Windows.UI.Xaml.Controls.Border)(target);
                    ((global::Windows.UI.Xaml.Controls.Border)element33).PointerEntered += this.Summary_PointerEntered;
                    ((global::Windows.UI.Xaml.Controls.Border)element33).PointerExited += this.Summary_PointerExited;
                }
                break;
            case 34: // Views\VisionApiExplorer.xaml line 150
                {
                    global::Windows.UI.Xaml.Controls.Border element34 = (global::Windows.UI.Xaml.Controls.Border)(target);
                    ((global::Windows.UI.Xaml.Controls.Border)element34).PointerEntered += this.Summary_PointerEntered;
                    ((global::Windows.UI.Xaml.Controls.Border)element34).PointerExited += this.Summary_PointerExited;
                }
                break;
            case 35: // Views\VisionApiExplorer.xaml line 156
                {
                    this.landmarksTextBlock = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 43: // Views\VisionApiExplorer.xaml line 49
                {
                    this.OverlayPresenter = (global::IntelligentKioskSample.Controls.Overlays.VisionApiOverlayPresenter)(target);
                }
                break;
            case 44: // Views\VisionApiExplorer.xaml line 50
                {
                    this.Processing = (global::Windows.UI.Xaml.Controls.ProgressRing)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\VisionApiExplorer.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    VisionApiExplorer_obj1_Bindings bindings = new VisionApiExplorer_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 7: // Views\VisionApiExplorer.xaml line 79
                {                    
                    global::Windows.UI.Xaml.Controls.TextBlock element7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                    VisionApiExplorer_obj7_Bindings bindings = new VisionApiExplorer_obj7_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element7.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element7.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element7, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element7, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

